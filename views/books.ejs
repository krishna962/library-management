<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>All Books</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f6f9fc;
      padding: 20px;
      margin: 0;
    }

    h1 {
      text-align: center;
      color: #2d3436;
      margin-bottom: 20px;
    }

    .controls {
      display: flex;
      justify-content: space-between;
      max-width: 900px;
      margin: auto;
      margin-bottom: 20px;
      flex-wrap: wrap;
      gap: 10px;
    }

    input[type="text"] {
      padding: 10px;
      width: 60%;
      border: 1px solid #ccc;
      border-radius: 8px;
    }

    select {
      padding: 10px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }

    .book-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      max-width: 1200px;
      margin: auto;
    }

    .book-card {
      background: white;
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease-in-out;
      cursor: pointer;
    }

    .book-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }

    .book-title {
      font-weight: bold;
      font-size: 1.2rem;
      color: #2d3436;
    }

    .book-author {
      font-style: italic;
      color: #636e72;
    }

    .pagination {
      text-align: center;
      margin-top: 30px;
    }

    .pagination button {
      margin: 0 5px;
      padding: 10px 15px;
      background: #0984e3;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }

    .pagination button:disabled {
      background: #b2bec3;
      cursor: default;
    }

    .issue-btn {
      margin-top: 10px;
      padding: 10px;
      background: #00b894;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .issue-btn:hover {
      background: #019875;
    }

    /* Modal */
    .modal {
      display: none;
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.6);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background: white;
      padding: 30px;
      border-radius: 12px;
      width: 90%;
      max-width: 500px;
      text-align: center;
    }

    .modal h2 {
      margin-bottom: 10px;
    }

    .close-btn {
      background: #d63031;
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 6px;
      margin-top: 15px;
      cursor: pointer;
    }

  </style>
</head>
<body>
  <h1>ðŸ“˜ Library Books</h1>

  <div class="controls">
    <input type="text" id="searchInput" placeholder="Search books by title or author..." />
    <select id="sortSelect">
      <option value="">Sort</option>
      <option value="title">Title</option>
      <option value="author">Author</option>
    </select>
  </div>

  <div class="book-container" id="bookList">
    <% let isStudent = user && user.role === 'student'; %>


    <% books.forEach(book => { %>
      <div class="book-card" onclick='showDetails("<%= book.title %>", "<%= book.author %>", "<%= book.genre %>")'>
        <div class="book-title book-title"><%= book.title %></div>
        <div class="book-author book-author">by <%= book.author %></div>
        <% if (book.genre) { %>
          <div style="margin-top: 5px; color: #0984e3;">Genre: <%= book.genre %></div>
        <% } %>

        <% if (isStudent) { %>
          <form action="/issue-book" method="POST">
            <input type="hidden" name="bookId" value="<%= book._id %>">
            <button type="submit" class="issue-btn">ðŸ“– Issue Book</button>
          </form>
        <% } else { %>
          <button onclick="redirectToLogin()" class="issue-btn">ðŸ”’ Login to Issue</button>
        <% } %>
      </div>
    <% }) %>
  </div>

  <div class="pagination">
    <button id="prevPage">Prev</button>
    <span id="pageNumber">1</span>
    <button id="nextPage">Next</button>
  </div>

  <!-- Modal for Book Details -->
  <div class="modal" id="bookModal">
    <div class="modal-content">
      <h2 id="modalTitle"></h2>
      <p id="modalAuthor"></p>
      <p id="modalGenre"></p>
      <button class="close-btn" onclick="closeModal()">Close</button>
    </div>
  </div>

  <script>
    const books = [...document.querySelectorAll('.book-card')];
    const searchInput = document.getElementById('searchInput');
    const sortSelect = document.getElementById('sortSelect');
    const bookList = document.getElementById('bookList');

    let currentPage = 1;
    const booksPerPage = 6;

    function paginateBooks() {
      books.forEach((book, index) => {
        book.style.display =
          index >= (currentPage - 1) * booksPerPage && index < currentPage * booksPerPage
            ? 'block'
            : 'none';
      });

      document.getElementById('pageNumber').innerText = currentPage;
      document.getElementById('prevPage').disabled = currentPage === 1;
      document.getElementById('nextPage').disabled = currentPage * booksPerPage >= books.length;
    }

    document.getElementById('prevPage').addEventListener('click', () => {
      if (currentPage > 1) currentPage--;
      paginateBooks();
    });

    document.getElementById('nextPage').addEventListener('click', () => {
      if (currentPage * booksPerPage < books.length) currentPage++;
      paginateBooks();
    });

    searchInput.addEventListener('input', () => {
      const val = searchInput.value.toLowerCase();
      books.forEach(book => {
        book.style.display = book.innerText.toLowerCase().includes(val) ? 'block' : 'none';
      });
    });

    sortSelect.addEventListener('change', () => {
      const sortBy = sortSelect.value;
      if (!sortBy) return;

      const sorted = books.sort((a, b) =>
        a.querySelector('.book-' + sortBy).innerText.localeCompare(
          b.querySelector('.book-' + sortBy).innerText
        )
      );

      bookList.innerHTML = '';
      sorted.forEach(el => bookList.appendChild(el));
      paginateBooks();
    });

    function showDetails(title, author, genre) {
      document.getElementById('modalTitle').innerText = title;
      document.getElementById('modalAuthor').innerText = 'by ' + author;
      document.getElementById('modalGenre').innerText = 'Genre: ' + genre;
      document.getElementById('bookModal').style.display = 'flex';
    }

    function closeModal() {
      document.getElementById('bookModal').style.display = 'none';
    }

    function redirectToLogin() {
      alert("Please login as a student to issue this book.");
      window.location.href = "/login";
    }

    paginateBooks(); // Initial load
  </script>
</body>
</html>
